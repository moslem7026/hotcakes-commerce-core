[
  {
    "Id": "CreateActionGroup",
    "Title": { "default": "Create Action Group" },
    "HelpText": { "default": "Creates an action group that can be later invoked multiple times." },
    "TypeStr": "DnnSharp.Common.Actions.Flow.CreateActionGroup, DnnSharp.Common.Actions",
    "Settings": {
      "Group": "Flow"
    },
    "Parameters": [
      {
        "Id": "GroupName",
        "Title": { "default": "Group Name" },
        "HelpText": { "default": "Can contain contextual tokens (for example [Email]) and <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\" tabindex=\"-1\">My Tokens</a>." },
        "Type": "Text"
      },

      {
        "Id": "ActionList",
        "Title": { "default": "Actions" },
        "HelpText": { "default": "Define the list of actions in this group." },
        "Type": "ActionList"
      }
    ]
  },

  {
    "Id": "CallActionGroup",
    "Title": { "default": "Call Action Group" },
    "HelpText": { "default": "Executes all actions from a group." },
    "TypeStr": "DnnSharp.Common.Actions.Flow.CallActionGroup, DnnSharp.Common.Actions",
    "Settings": {
      "Group": "Flow"
    },
    "Parameters": [
      {
        "Id": "GroupName",
        "Title": { "default": "Group Name" },
        "HelpText": { "default": "Can contain contextual tokens (for example [Email]) and <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\" tabindex=\"-1\">My Tokens</a>." },
        "Type": "Text"
      },

      {
          "Id": "Arguments",
          "Title": { "default": "Arguments" },
          "HelpText": { "default": "These arguments are available as tokens when executing the aciton list." },
          "Type": "NameValueCollection",
          "Settings": {
              "NameColumn": "Name",
              "ValueColumn": "Value",
              "ButtonName": "Add Argument"
          }
      }
    ]
  },

  {
    "Id": "ExecuteActionsAsync",
    "Title": { "default": "Execute Actions Asynchronously" },
    "HelpText": { "default": "Executes a list of actions on a different thread, so execution is not blocke. Note that the result of execting the actions can't be sent back to the browser. Use the On Error actions to handle unexpected errors." },
    "TypeStr": "DnnSharp.Common.Actions.Flow.ExecuteActionsAsync, DnnSharp.Common.Actions",
    "Settings": {
      "Group": "Flow"
    },
    "Parameters": [
      {
        "Id": "ActionList",
        "Title": { "default": "Actions" },
        "HelpText": { "default": "Define the list of actions to execute asynchronously." },
        "Type": "ActionList"
      }
    ]
  }

]
