[{
    "Id": "SaveFileToDisk",
    "Title": { "default": "Save file to disk" },
    "TypeStr": "DnnSharp.Common.Actions.Documents.SaveFileToDisk, DnnSharp.Common.Actions",
    "HelpText": { "default": "Saves a file to disk. The contents of the file can be retrieved from an arbitrary URL or it can be specified as a plain text value. <br />When retrieving the file from an URL endpoint the supported request method is GET. Also, we can infer the filename and extension from the Content-Disposition header of the request if it is present and the <b>Pattern</b> parameter evaluates to an empty string." },
    "Settings": {
        "Group": "Documents"
    },
    "Parameters": [{
            "Id": "InputMode",
            "Title": {
                "default": "Input mode"
            },
            "Type": "Select",
            "Settings": {
                "Items": {
                    "Url": { "default": "Url" },
                    "Text": { "default": "Text content" },
                    "Base64": { "default": "Base64 image content" }
                }
            },
            "HelpText": {
                "default": "Url: will retrieve the content from the provided Url and save it to the specified file.<br />Text: will write the provided text content to the specified file.<br />Base64 image: will process the base64 image string (in <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">Data URI Scheme</a> format, e.g. data:image/png;base64,&lt;base64 content&gt;) and save the data as image on disk to the specified file. It will enforce file extension if it doesn't match with the metadata in the base64 string."
            }
        },
        {
            "Id": "Url",
            "Title": {
                "default": "Url"
            },
            "Type": "Text",
            "Settings": {
                "ShowCondition": "itemParameters['InputMode'].Value == 'Url'"
            },
            "HelpText": {
                "default": "The URL of the file to be downloaded. A GET request will be made to the URL provided here."
            }
        },
        {
            "Id": "Content",
            "Title": { "default": "Content" },
            "HelpText": { "default": "Content of the file. Can contain <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\">My Tokens</a>." },
            "Type": "Code",
            "Settings": {
                "ShowCondition": "itemParameters['InputMode'].Value == 'Text' || itemParameters['InputMode'].Value == 'Base64'"
            }
        },
        {
            "Id": "Folder",
            "Title": {
                "default": "Folder"
            },
            "HelpText": {
                "default": "Select the portal folder where the file will be saved."
            },
            "Type": "Select",
            "Settings": {
                "DataSource": "PortalFolderList",
                "SupportsExpressions": "true"
            }
        },
        {
            "Id": "Pattern",
            "Title": {
                "default": "Pattern"
            },
            "HelpText": {
                "default": "Optionally provide a pattern to use for filenames on the server. For example &quot;[User:Username]-avatar&quot;. Leave blank to use generate a random name. If no extension is provided, the .txt extension will be automatically added. Supports <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\" tabindex=\"-1\" > My Tokens </a>"
            },
            "Type": "Text"
        },
        {
            "Id": "Duplicates",
            "Title": {
                "default": "Handle Duplicates"
            },
            "Type": "Select",
            "Settings": {
                "Items": {
                    "Overwrite": {
                        "default": "Overwrite"
                    },
                    "Rename": {
                        "default": "Rename"
                    }
                }
            },
            "DefaultValue": {
                "default": "Rename"
            }
        },
        {
            "Id": "AbsoluteURLOutputTokenName",
            "Title": {
                "default": "Absolute URL Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Absolute URL. The token can be used in next actions down the stack."
            },
            "Type": "Text"
        },
        {
            "Id": "RelativeURLOutputTokenName",
            "Title": {
                "default": "Relative URL Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Relative URL. The token can be used in next actions down the stack."
            },
            "Type": "Text"
        },
        {
            "Id": "PhysicalPathOutputTokenName",
            "Title": {
                "default": "Physical Path Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Physical Path. The token can be used in next actions down the stack."
            },
            "Type": "Text"
        },
        {
            "Id": "LinkClickOutputTokenName",
            "Title": {
                "default": "Link Click Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the LinkClick Url. The token can be used in next actions down the stack."
            },
            "Type": "Text"
        },
        {
            "Id": "FileIdOutputTokenName",
            "Title": {
                "default": "File Id Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the File Id. The token can be used in next actions down the stack."
            },
            "Type": "Text"
        }
    ]
}]