[
    {
        "Id": "ParseJsonIntoTokens",
        "Title": {
            "default": "Parse JSON Into Tokens"
        },
        "HelpText": {
            "default": "Creates tokens that follow this pattern [&lt;BaseTokenName&gt;:PropertyName]. <br/>
                      BaseTokenName is a parameter of this action that is specified below. <br/> 
                      Note that if the the object is complex, child nodes can be accessed with dot notation like this [&lt;BaseTokenName&gt;:Property.SubProperty.AndSoOn]. <br/> 
                      In case of an array, for performance reasons and to prevent context flooding with tokens, they are not expanded. You will need to re-apply the Parse JSON Into Tokens action on the array token (e.g. [<BaseTokenName>:ArrayProperty]) to generate tokens for it. The tokens resulting from an array parse will look like this: [<NewBaseTokenName>:0.Property], [<NewBaseTokenName>:1.Property]."
        },
        "TypeStr": "DnnSharp.Common.Actions.Parsing.ParseJsonIntoTokens, DnnSharp.Common.Actions",
        "Settings": {
            "Group": "Parsing"
        },
        "Parameters": [
            {
                "Id": "JsonString",
                "Title": {
                    "default": "JSON String"
                },
                "HelpText": {
                    "default": "Can contain contextual tokens (for example [Email]) and <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\" tabindex=\"-1\">My Tokens</a>."
                },
                "Type": "Textarea"
            },
            {
                "Id": "BaseTokenName",
                "Title": {
                    "default": "Base Token Name"
                },
                "HelpText": {
                    "default": "This is a prefix for all tokens that are created from the JSON string. See action help text above for details."
                },
                "Type": "Text"
            }
        ]
    }
]
